{"version":3,"sources":["webpack://VideojsRecord.[name]/webpack/universalModuleDefinition","webpack://VideojsRecord.[name]/webpack/bootstrap","webpack://VideojsRecord.[name]/./src/js/plugins/lamejs-plugin.js"],"names":["RecordEngine","videojs","getComponent","LamejsEngine","stream","mediaType","debug","inputStream","audioType","config","sampleRate","bitRate","engine","Worker","audioWorkerURL","onmessage","onWorkerMessage","bind","postMessage","cmd","AudioContext","window","webkitAudioContext","audioContext","audioSourceNode","createMediaStreamSource","processor","createScriptProcessor","onaudioprocess","onAudioProcess","connect","destination","disconnect","close","then","catch","reason","ev","data","onStopRecording","Blob","buf","type","player","trigger","error","inputBuffer","getChannelData"],"mappings":"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","file":"videojs.record.lamejs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lamejs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lamejs\"] = factory();\n\telse\n\t\troot[\"VideojsRecord\"] = root[\"VideojsRecord\"] || {}, root[\"VideojsRecord\"][\"lamejs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/plugins/lamejs-plugin.js\");\n","/**\n * @file lamejs-plugin.js\n * @since 1.1.0\n */\n\nconst RecordEngine = videojs.getComponent('RecordEngine');\n\n/**\n * Audio-only engine for the lamejs library.\n *\n * @class\n * @augments videojs.RecordEngine\n */\nclass LamejsEngine extends RecordEngine {\n    /**\n     * Setup recording engine.\n     */\n    setup(stream, mediaType, debug) {\n        this.inputStream = stream;\n        this.mediaType = mediaType;\n        this.debug = debug;\n        this.audioType = 'audio/mp3';\n\n        this.config = {\n            debug: this.debug,\n            sampleRate: this.sampleRate,\n            bitRate: this.bitRate\n        };\n\n        this.engine = new Worker(this.audioWorkerURL);\n        this.engine.onmessage = this.onWorkerMessage.bind(this);\n        this.engine.postMessage({cmd: 'init', config: this.config});\n    }\n\n    /**\n     * Start recording.\n     */\n    start() {\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n\n        this.audioSourceNode = this.audioContext.createMediaStreamSource(\n            this.inputStream);\n        // a bufferSize of 0 instructs the browser to choose the best bufferSize\n        this.processor = this.audioContext.createScriptProcessor(\n            0, 1, 1);\n        this.processor.onaudioprocess = this.onAudioProcess.bind(this);\n        this.audioSourceNode.connect(this.processor);\n        this.processor.connect(this.audioContext.destination);\n    }\n\n    /**\n     * Stop recording.\n     */\n    stop() {\n        if (this.processor && this.audioSourceNode) {\n            this.audioSourceNode.disconnect();\n            this.processor.disconnect();\n            this.processor.onaudioprocess = null;\n        }\n        if (this.audioContext) {\n            // ignore errors about already being closed\n            this.audioContext.close().then(() => {}).catch((reason) => {});\n        }\n\n        // free up memory\n        this.engine.postMessage({cmd: 'finish'});\n    }\n\n    /**\n     * Received a message from the worker.\n     */\n    onWorkerMessage(ev) {\n        switch (ev.data.cmd) {\n            case 'end':\n                this.onStopRecording(new Blob(ev.data.buf,\n                    {type: this.audioType}));\n                break;\n\n            case 'error':\n                this.player().trigger('error', ev.data.error);\n                break;\n\n            default:\n                // invalid message received\n                this.player().trigger('error', ev.data);\n                break;\n        }\n    }\n\n    /**\n     * Continuous encoding of audio data.\n     * @private\n     */\n    onAudioProcess(ev) {\n        // send microphone data to LAME for MP3 encoding while recording\n        let data = ev.inputBuffer.getChannelData(0);\n\n        this.engine.postMessage({cmd: 'encode', buf: data});\n    }\n}\n\n// expose plugin\nvideojs.LamejsEngine = LamejsEngine;\n\nexport default LamejsEngine;\n"],"sourceRoot":""}